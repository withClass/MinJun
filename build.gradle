plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ✅ Spring Boot Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // ✅ Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // ✅ Validation (@Valid 등)
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // ✅ QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // ✅ Spring Cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // ✅ Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // ✅ Jackson Java 8 날짜/시간 모듈
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // ✅ Database (MySQL)
   runtimeOnly 'com.mysql:mysql-connector-j'

    // ✅ Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ✅ Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
